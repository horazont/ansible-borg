---
- name: source borgbackup from backports
  template:
    dest: "/etc/apt/preferences.d/20-borgbackup-from-backports.pref"
    src: "pin-borgbackup.pref"
  tags:
  - borg
  register: pin_borgbackup

- name: remove borgbackup installed via pip
  pip:
    name: ['borgbackup']
    state: absent
    executable: pip3
  failed_when: false
  tags:
  - borg

- name: install borgbackup
  apt:
    name: borgbackup
    state: latest
    update_cache: "{{ pin_borgbackup is changed }}"
  tags:
  - borg

- name: deploy wrapper scripts
  copy:
    src: "{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    mode: u=rwx,go=rx
  with_items:
  - borgenv
  tags:
  - borg

- name: create config directory
  file:
    state: directory
    dest: "/etc/{{ item }}"
    owner: root
    group: root
    mode: u=rx,go-rwx
  with_items:
  - borgbackup/
  - borgbackup/repositories/
  - borgbackup/jobs/
  tags:
  - borg

- name: deploy environments
  template:
    src: job.sh
    dest: "/etc/borgbackup/jobs/{{ item.name }}@{{ item.repository }}"
    owner: root
    group: root
    mode: u=r,go-rwx
  loop: "{{ borg_jobs }}"
  tags:
  - borg

- name: deploy keys
  copy:
    content: "{{ item.value.private_key }}"
    dest: "/etc/borgbackup/repositories/{{ item.key }}.key"
    owner: root
    group: root
    mode: u=r,go-rwx
  with_dict: "{{ borg_repositories }}"
  tags:
  - borg

- name: deploy crontab
  template:
    src: crontab
    dest: /etc/cron.d/borgbackup
  tags:
  - borg

- name: add job definitions to prometheus
  template:
    src: definitions.prom
    dest: /var/lib/prometheus/node-exporter/borgbackup-definitions.prom
    owner: root
    group: root
    mode: ugo=r
  tags:
  - borg
